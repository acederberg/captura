# --------------------------------------------------------------------------- #
# NOTE: Caching of dependencies does not happen here, this project assumes that
#       developers will use a venv which will be mounted.

FROM python:3.11 AS base

RUN useradd -d /home/captura captura \
  && mkdir /home/captura \
  && chown captura:captura /home/captura

RUN chown -R captura:captura /home/captura

USER captura
WORKDIR /home/captura/app

ENTRYPOINT ["bash"]


# --------------------------------------------------------------------------- #

FROM base AS dev

COPY ./docker-entrypoint.sh /home/captura/.bashrc

# NOTE: Running this script can help avoid installing all of the dependencies
#       and virtual environment.
# RUN bash /home/captura/.bashrc "setup" >> ~/.captura-setup.log


# --------------------------------------------------------------------------- #

FROM base AS production

# NOTE: Assumes that build is occuring at the project root.
COPY . /home/captura/app

USER root
RUN chown captura:captura -R /home/captura
USER captura

RUN mkdir /home/captura/.captura /home/captura/.captura/logs
COPY ./docker/logging.yaml /home/captura/.captura

# NOTE: Captura secret should be set explicitly when running containers in some
#       sort of horrizontal scaling.
ENV CAPTURA_APP__ENVIRONMENT="production" \
  CAPTURA_LOGS_CONFIG="/home/captura/.captura/logging.yaml" \
  CAPTURA_LOGS_PATH="/home/captura/.captura/logs" \
  CAPTURA_CONFIG_APP="/home/captura/.captura/app.yaml" \
  CAPTURA_CONFIG_CLIENT="/home/captura/.captura/client.yaml" \
  CAPTURA_STATIC="/home/captura/static" \
  CAPTURA_SECRET="changeme"

RUN pip install /home/captura/app
ENTRYPOINT ["python3", "-m", "app", "run"]


# --------------------------------------------------------------------------- #

FROM prod AS test

ENV CAPTURA_CONFIG_LOG = "/home/captura/.captura/logging.yaml" \
  CAPTURA_CONFIG_APP_TEST = "/home/captura/.captura/app.yaml" \
  CAPTURA_CONFIG_CLIENT_TEST = "/home/captura/.captura/client.yaml"

RUN pip install /home/captura/app[test]
ENTRYPOINT ["python", "-m", "pytest"]

