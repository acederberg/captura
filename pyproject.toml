
# vi: set ft=toml:
# Read `this <https://snarky.ca/what-the-heck-is-pyproject-toml/>`.

[build-system]
requires = ["setuptools >= 40.6.0", "wheel"]
build-backend = "setuptools.build_meta"


[project]
authors = [{name = "Adrian Cederberg", email = "adrn.cederberg123@gmail.com"}, ]
name = "captura"
version = "0.1.4"
description = "An api to serve markdown and reStructured text as json or rendered HTML."
readme = "README.rst"
keywords = ["api", "rst", "markdown"]
#liscense = "Lisense :: OSI Approved :: MIT License"

# NOTE: Requires structural pattern matching.
classifiers = [
    'Programming Language :: Python',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3 :: Only',
    'Programming Language :: Python :: 3.11',
    'Intended Audience :: Developers',
    'Topic :: Internet',
]
dependencies = [
  "uvicorn",
  "cryptography",
  "fastapi",
	"pydantic>=2,<2.7",
  "pydantic-settings>=2",
  "python-multipart",
  "sqlalchemy>=2",
  "yaml-settings-pydantic>=2.2.0",
  "PyMySQL",
  "PyMySQL[rsa]",
  "typer",
  "rich",
  "pyjwt[crypto]",
	"httpx",
  "websockets",
  "itsdangerous",
]

requires-python = ">=3.11" # because spm



[project.optional-dependencies]
ci = [
  "build",
  "twine",
]
dev = [
	"black",
	"flake8",
	"mypy",
	"isort",
  "autoflake",
  "jedi-language-server",
  "docker",
  "yamllint",
]
test = [
	"pytest",
  "pytest-cov",
  "pytest-asyncio",
  "pytest-html",
  "pytest-xdist", 
  # "pytest-flakefinder",
  "faker",
]
plugin = ["GitPython"]

[project.scripts]
captura = "app.__main__:main"
plugin = "plugin.__main__:main"
legere = "client.__main__:main"
simulatus = "dummy.__main__:main"


# NOTE: DO NOT TOUCH THIS! INCLUSION OF PACKAGE DATA IS A PAIN! See
#
# .. code:: text
#
#    https://stackoverflow.com/questions/76485082/package-and-find-non-python-files-in-a-python-package
#
[tool.setuptools]
include-package-data = true

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
"*" = ["py.typed", "*.yaml", "*.rst", "*.j2"]




[tool.black]


# NOTE: See the documentation for the various configuration fields here:
#
#       .. code:: txt
#
#           https://pycqa.github.io/isort/docs/configuration/options.html
#
# NOTE: Does not support multiline headings. Is not indempotent.
[tool.isort]
profile = "black"
import_heading_stdlib = "=========================================================================== #"
import_heading_firstparty = "--------------------------------------------------------------------------- #" #\n# Captura\n"
skip = [".venv-local", ".venv"]
src_paths = ["src", "tests"]


[tool.flake8]
# Read the [enumeration of available properties](https://flake8.pycqa.org/en/latest/user/options.html#cmdoption-flake8-color).
indent_size = 4
max_line_length = 120
hang_closing = true
color = "always"
filename = "**/*.py"
ignore = [
	"E133", # Stupid closing backet requires indentation
]


[tool.autoflake]
in_place = true
remove_all_unused_imports = true
recursive = true


[tool.mypy]
ignore_missing_imports = true
plugins = ["pydantic.mypy"]


# NOTE: See the following reference for this plugin:
#
#       .. code::text
#
#          https://docs.pydantic.dev/latest/integrations/mypy/#configuring-the-plugin
#
[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = false
warn_required_dynamic_aliases = true


[tool.bumpver]
current_version = "0.1.4"
version_pattern = "MAJOR.MINOR.PATCH"
commit_message  = "Bump version {old_version} -> {new_version}"
commit          = true
tag             = true
push            = false


[tool.bumpver.file_patterns]
"pyproject.toml" = ['current_version = "{version}"', 'version = "{version}"']
"src/app/__init__.py" = ["{version}"]
"docker/docker-compose.yaml" = ["image: acederberg/captura-development:{version}"]


[tool.setuptools_scm]


# NOTE: Look at this later: https://docs.pytest.org/en/6.2.x/usage.html#dropping-to-pdb-python-debugger-on-failures
[tool.pytest.ini_options]
testpaths = "tests"
addopts = "--ignore tests/junk --ignore-glob ./tests/test_controllers/test_delete.py --ignore ./tests/test_controllers/test_upsert.py --last-failed --last-failed-no-failures all"
count = 10
flakey_ignore = [
  "test_not_found_404",
]
flakey_ignore_err = [
  "All filtered data is empty.",
]


# NOTE: Reference https://coverage.readthedocs.io/en/latest/config.html#sample-file
[tool.coverage.run]
branch = true
include = ["./src/app/**/*.py"]
omit = ["./tests/**/*.py"]


[tool.coverage.report]
fail_under = 75
format = "html"
include = ["./src/app/**/*.py"]
omit = ["./tests/**/*.py"]
skip_covered = true
skip_empty = true
sort = "-cover" # NOTE: Sort from least to greatest coverage.


# NOTE: Can be used to overwrite settings from `tool.coverage.report`.
[tool.coverage.html]
directory = "./src/app/static/cov"
title = "Captura PyTest Coverage Report"
