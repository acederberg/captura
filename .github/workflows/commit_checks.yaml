# SPDX-License-Identifier: MIT
# SPDX-FileCopyrightText: 2024 Helio Chissini de Castro

name: Commit Validation

on:
  workflow_dispatch:
  pull_request:
    paths-ignore:
      - '**.rst'
  push:

jobs:
  check-commit:
    name: Commit Validation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install required dependencies
        run: |
          apt update
          apt install -y sudo
          sudo apt install -y git curl
          curl -sL https://deb.nodesource.com/setup_20.x | sudo -E bash -
          sudo DEBIAN_FRONTEND=noninteractive apt install -y nodejs
          npm install conventional-changelog-conventionalcommits
          npm install commitlint@latest @commitlint/config-conventional

      - name: Print versions
        run: |
          echo "git version: $(git --version)" >> $GITHUB_STEP_SUMMARY
          echo "node version: $(node --version)" >> $GITHUB_STEP_SUMMARY
          echo "npm version: $(npm --version)" >> $GITHUB_STEP_SUMMARY
          echo "commitlint version: $(npx commitlint --version)" >> $GITHUB_STEP_SUMMARY

      - name: Validate current commit (last commit) with commitlint
        if: github.event_name == 'push'
        run: npx commitlint --last --verbose

  lint:
    name: Check Code
    runs-on: ubuntu-latest
    steps:
      - name: Install poetry
        run: pipx install poetry

      - uses: actions/setup-python@v5
        with:
          python-version: '3.9'
          cache: 'poetry'
      - run:
          poetry install -q

      - name: MyPy static check source
        id: mypy
        run: |
          poetry run mypy --config-file pyproject.toml --pretty ./src >> $GITHUB_STEP_SUMMARY
        continue-on-error: true

      - name: MyPy static check tests
        id: mypy
        run: |
          poetry run mypy --config-file pyproject.toml --pretty ./tests >> $GITHUB_STEP_SUMMARY
        continue-on-error: true

      - name: Ruff Linting
        id: ruff
        run: |
          poetry install
          poetry run ruff check --config pyproject.toml --output-format github .
        continue-on-error: true

      - run: |
          if [ ${{ steps.mypy.outcome }} != 'success' ] || [ ${{ steps.ruff.outcome }} != 'success' ]; then
            echo "One or more checks failed"
            exit 1
          fi

