---
# Note: This will run every time that a new release is published because of
# `on`. Releasing can be controller through the github CLI like
#
name: Publish to Python Package Index (PyPI).
on:
  workflow_dispatch:
  release:
    types: [published]
jobs:
  pypi:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout.  
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Ensure that Python is Installed.
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Ensure that the Package Builds.
        run: |
          python3 -m pip install build twine

          echo "## Build\n\n~~~stdout" >> $GITHUB_STEP_SUMMARY
          python3 -m build >> $GITHUB_STEP_SUMMARY
          echo "~~~\n\n## Twine Check\n\n~~~stdout" >> $GITHUB_STEP_SUMMARY
          python3 -m twine check dist/* >> $GITHUB_STEP_SUMMARY
          echo "~~~" >> $GITHUB_STEP_SUMMARY

      - name: Publish to PyPI.
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}

  # NOTE: This will be done in the ``captura-deploy`` repository. Making a PR 
  #       here should trigger that pipeline.
  # dockerhub:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout.
  #       uses: actions/checkout@v4
  #       with:
  #         fetch-depth: 0
  #
  #     - name: Log in to Docker Hub.
  #       uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
  #       with:
  #         username: ${{ secrets.DOCKER_USERNAME }}
  #         password: ${{ secrets.DOCKER_PASSWORD }}
        
